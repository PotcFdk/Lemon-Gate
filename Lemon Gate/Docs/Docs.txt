Expresson Advanced Documentation:
	
	Info:
		
		Expresson Adanced (E-A) is a scripting languge written by
		Rusketh (Christopher Goluch) and Oska49 and other contributers.
		The project was started in July 2012 on the back of the teams previous uncompleted Expresson 3.
		E-A is commonly refered to as Lemon or LemonGate, the codename past over from the Expression 3 project.

	Variables:
		
		In E-A all variables must begin with an upper cased letter.
		E-A is a type strict variable language so types must be specified on decleration.
		
		Example: number Var = 5
		
		E-A supports both local and global variables. All variables in E-A are global by default unless declared as local.
		
		Example: local number Var = 5
		
		As well as local Variables E-A supports dynamic creation of i/o Variables and persistant Variables.
		These Variables can only be declared in the root of your code and are always global Variables.
		
		Examples:
			
			input  number Var
			output number Var = 6
			perist number Var = 6
		
		Notice how the input Variable is not assigned using the 'assigment operator (=)' this is because input variables are unassignable.
		
		All global and local variabels are cleared at the start of every execution.
		If you need to retain data between executions you need to use a persistant variable.
		
	
		E-A also offers the ability to declare and assign multiple variabels of the same type on one line with out using a sequence seperator.
		
		Example: number VarA, Var2, Var3 = 1, 2, 3
		
		These variables will be assigned in sequence so the following is possible
		
		Example: number VarA, VarB, VarC = 1, VarA * 2, VarA + VarB
	
	Events:
		
		Events are blocks of code that are called during a particular server event.
		Events are structured very simular to user functions however only 1 Event Block per event can exist at any one time.
		To add to this, you can dynamicly change your Event call back by overwriting the event at run time.
		
		Example: event think() { print("I think") }
		
		Currently only the think event exists, more events that have perameters and return values will be added later in development.
		
	User Functions:
		
		User functions are custom user made functions that can be used to make writing complex code easyer.
		
		Example:
			function test() { print("test") }
			function number add(A, B:number) { return A + B }
			
		Todo: Better explantation.
	
	Proposed Features:
		
		The following features are currently not avalible in E-A.
		These features are planned to be supported before E-A enters public beta testing.
		The documentation provided is likly to change as at time of writing these features are only proposed.
			
		
		
		
		
		
		
